#include<iostream>
#include<cstdlib>
#include<ctime>
#include<Windows.h>

using namespace std;

HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);

void set_color(int color) {
    SetConsoleTextAttribute(console, color);
}

int generate_number() {
    srand(static_cast<unsigned>(time(0)));

    int number;
    bool digits[10] = { false };

    int temp;

    do {
        number = rand() % 9000 + 1000;

        temp = number;

        while (temp > 0) {
            if (digits[temp % 10]) {
                break;
            }
            digits[temp % 10] = true;
            temp /= 10;
        }

        fill(begin(digits), end(digits), false);

    } while (temp > 0);

    return number;
}

bool is_valid_input(int number) {
    if (number < 1000 || number > 9999) {
        return false;
    }

    bool digits[10] = { false };

    while (number > 0) {
        if (digits[number % 10]) {
            return false;
        }

        digits[number % 10] = true;
        number /= 10;
    }

    return true;
}

void check_guess(int secret_number, int user_number, int& pluses, int& minuses) {
    pluses = minuses = 0;

    for (int i = 0; i < 4; ++i) {
        int secret_digit = (secret_number / (int)pow(10, 3 - i)) % 10;
        int user_digit = (user_number / (int)(pow(10, 3 - i))) % 10;

        if (secret_digit == user_digit) {
            ++pluses;
        }
        else {
            for (int j = 0; j < 4; ++j) {
                int temp_secret_digit = (secret_number / static_cast<int>(pow(10, 3 - j))) % 10;

                if ((temp_secret_digit == user_digit) && (i != j)) {
                    ++minuses;
                    break;
                }
            }
        }
    }
}

int main() {
    int secret_number = generate_number();
    int user_number, pluses, minuses, attempts = 0;

    const WORD textColor = 0xE;
    const WORD bgColor = 0x70;

    SetConsoleTextAttribute(console, textColor | (bgColor << 4));

    cout << "Welcome to the game 'Bulls and Cows!'\n\n";
    cout << "The computer guessed a four-digit number. Try to guess!\n\n";
    SetConsoleTextAttribute(console, 15);

    cout << secret_number << endl << endl;

    do {
        do {
            while (true) {
                set_color(11);
                cout << "enter a four-digit number: ";
                set_color(15);
                if (!(cin >> user_number)) {
                    cin.clear();
                    cin.ignore();
                    set_color(12);
                    cout << "error! please enter a valid number!\n";
                    set_color(15);
                    continue;
                }
                break;
            }

            if (!is_valid_input(user_number)) {
                set_color(12);
                cout << "\nerror! please enter a valid four-digit number with no repeated digits.\n";
                set_color(15);
            }
        } while (!is_valid_input(user_number));

        check_guess(secret_number, user_number, pluses, minuses);

        set_color(13);
        cout << "\nresult: " << pluses << " pluses and " << minuses << " minuses! \n";
        set_color(15);

        ++attempts;
    } while (pluses < 4);

    set_color(10);
    cout << "\ncongratulations! you guessed the number " << secret_number << " in " << attempts << " attempts!\n";
    set_color(15);

    return 0;
}


1) Функция void set_color(int color) предназначена для изменения цвета текста при выводе в консоле.

2) Функция generate_number() предназначена для создания рандомного четырехзначного числа(секретного числа), без повторяющихся цифр.
   В функции происходит следующее:
   	a. Инициализация генератора рандомных чисел;
   	b. Генерация рандомного четырехзначного числа;
   	c. Проверка на уникальность цифр в числе;
   	d. Обнуление флагов после каждой итерации;
   	e. Повторение генерации, если нашлись повторяющиеся цифры;
        f. Возврат сгенерированного числа.

3) Функция is_valid_input(int number) предназначена для проверки введённого пользователем числа.
   В функции происходит следующее:
	a. Проверка на диапазон(от 1000 до 9999 включительно);
	b. Проверка на уникальность цифр;
	c. Возврат результата.

3) Функция check_guess(int secret_number, int user_number, int& pluses, int& minuses) определяет количество "быков" 
   (угаданных цифр на правильных местах) и "коров" (угаданных цифр, но на неправильных местах) в процессе отгадывания 
   пользователем секретного числа.
   В функции происходит следующее:
	a. Инициализация счетчиков;
	b. Итерация по цифрам;
	c. Проверка на "быков";
	d. Проверка на "коров";

4) Функция int main() предназначена для:
	a. Генерация секретного числа(вызов функции generate_number());
	b. Основной цикл игры;
	c. Возврат;
	